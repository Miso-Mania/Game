digraph "detail::is_comparable&lt; Compare, A, B, void_t&lt; decltype(std::declval&lt; Compare &gt;()(std::declval&lt; A &gt;(), std::declval&lt; B &gt;())), decltype(std::declval&lt; Compare &gt;()(std::declval&lt; B &gt;(), std::declval&lt; A &gt;()))&gt; &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="detail::is_comparable\l\< Compare, A, B, void\l_t\< decltype(std::declval\l\< Compare \>()(std::declval\l\< A \>(), std::declval\< B \>\l())), decltype(std::declval\l\< Compare \>()(std::declval\< B\l \>(), std::declval\< A \>()))\> \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="true_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
